{"ast":null,"code":"var _jsxFileName = \"/Users/wojtek/Downloads/todo/client/src/components/LoginBar.jsx\";\nimport React from 'react';\nimport Cookies from 'universal-cookie';\nimport login from './img/log.png';\nimport './TaskAdd.sass';\nconst cookies = new Cookies();\n\nconst signBtn = props => {\n  if (cookies.get('login')) return '';else return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"log\",\n    onClick: () => props.setRegisterScreen(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 15\n    }\n  }, \"Sign up\");\n};\n\nconst txt = () => {\n  if (cookies.get('login')) return 'Log out';else return 'Log in';\n};\n\nconst handleLoginBtn = props => {\n  if (cookies.get('login')) {\n    cookies.remove('login');\n    cookies.remove('tasks');\n    cookies.remove('user');\n    cookies.remove('start');\n    window.location.reload();\n  } else if (props.screen === 2) props.setTaskScreen();else props.setLoginScreen();\n};\n\nconst LoginBar = (screen, setTaskScreen, setLoginScreen, setRegisterScreen) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"login-img\",\n    src: login,\n    alt: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), signBtn(screen), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"log\",\n    onClick: () => handleLoginBtn(screen, setTaskScreen, setLoginScreen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, txt()));\n};\n\nexport default LoginBar;","map":{"version":3,"sources":["/Users/wojtek/Downloads/todo/client/src/components/LoginBar.jsx"],"names":["React","Cookies","login","cookies","signBtn","props","get","setRegisterScreen","txt","handleLoginBtn","remove","window","location","reload","screen","setTaskScreen","setLoginScreen","LoginBar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,gBAAP;AAEA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;;AAEA,MAAMG,OAAO,GAAGC,KAAK,IAAI;AACvB,MAAIF,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAJ,EAA0B,OAAO,EAAP,CAA1B,KACK,oBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,OAAO,EAAG,MAAMD,KAAK,CAACE,iBAAN,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACN,CAHD;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAChB,MAAIL,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAJ,EAA0B,OAAO,SAAP,CAA1B,KACK,OAAO,QAAP;AACN,CAHD;;AAKA,MAAMG,cAAc,GAAGJ,KAAK,IAAI;AAC9B,MAAIF,OAAO,CAACG,GAAR,CAAY,OAAZ,CAAJ,EAA0B;AACtBH,IAAAA,OAAO,CAACO,MAAR,CAAe,OAAf;AACAP,IAAAA,OAAO,CAACO,MAAR,CAAe,OAAf;AACAP,IAAAA,OAAO,CAACO,MAAR,CAAe,MAAf;AACAP,IAAAA,OAAO,CAACO,MAAR,CAAe,OAAf;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,GAND,MAQK,IAAIR,KAAK,CAACS,MAAN,KAAiB,CAArB,EAAwBT,KAAK,CAACU,aAAN,GAAxB,KACAV,KAAK,CAACW,cAAN;AAEN,CAZD;;AAcA,MAAMC,QAAQ,GAAG,CAACH,MAAD,EAASC,aAAT,EAAwBC,cAAxB,EAAwCT,iBAAxC,KAA8D;AAC3E,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEL,KAAhC;AAAuC,IAAA,GAAG,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKE,OAAO,CAACU,MAAD,CAFZ,eAGI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,OAAO,EAAG,MAAML,cAAc,CAACK,MAAD,EAASC,aAAT,EAAwBC,cAAxB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6FR,GAAG,EAAhG,CAHJ,CADF;AAOD,CARH;;AAUE,eAAeS,QAAf","sourcesContent":["import React from 'react'\nimport Cookies from 'universal-cookie'\nimport login from './img/log.png'\nimport './TaskAdd.sass'\n\nconst cookies = new Cookies()\n\nconst signBtn = props => {\n  if (cookies.get('login')) return ''\n  else return <div className=\"log\" onClick={ () => props.setRegisterScreen()}>Sign up</div>\n}\n\nconst txt = () => {\n  if (cookies.get('login')) return 'Log out'\n  else return 'Log in'\n}\n\nconst handleLoginBtn = props => {\n  if (cookies.get('login')) {\n      cookies.remove('login')\n      cookies.remove('tasks')\n      cookies.remove('user')\n      cookies.remove('start')\n      window.location.reload()\n  }\n\n  else if (props.screen === 2) props.setTaskScreen()\n  else props.setLoginScreen()\n  \n}\n\nconst LoginBar = (screen, setTaskScreen, setLoginScreen, setRegisterScreen) => {\n    return (\n      <div className='login-bar'>\n          <img className='login-img' src={login} alt='login' />\n          {signBtn(screen)}\n          <div className='log' onClick={ () => handleLoginBtn(screen, setTaskScreen, setLoginScreen)}>{txt()}</div>\n      </div>\n    )\n  }\n\n  export default LoginBar"]},"metadata":{},"sourceType":"module"}