{"ast":null,"code":"import _classCallCheck from\"/Users/wojtek/Downloads/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/wojtek/Downloads/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/wojtek/Downloads/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/wojtek/Downloads/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/wojtek/Downloads/todo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{TimelineMax}from'gsap';import Cookies from'universal-cookie';import'./TaskList.sass';import logo from'./img/logo.png';var cookies=new Cookies();var animation=function animation(){var tasks=cookies.get('tasks')||[];if(tasks.length===0){var lefteye=document.querySelector('#lefteye');var righteye=document.querySelector('#righteye');var tail=document.querySelector('#tail');var t1=new TimelineMax({repeat:-1,repeatDelay:3});t1.add('start').to(lefteye,.1,{opacity:0}).to(righteye,.1,{opacity:0},'start').add('blink').to(lefteye,.1,{opacity:1}).to(righteye,.1,{opacity:1},'blink').set(tail,{transformOrigin:'50% 100%'}).to(tail,.5,{rotation:-7}).to(tail,.5,{rotation:14}).to(tail,.5,{rotation:0});return null;}};var TaskList=/*#__PURE__*/function(_Component){_inherits(TaskList,_Component);var _super=_createSuper(TaskList);function TaskList(){var _this;_classCallCheck(this,TaskList);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={task:''};_this.updateDatabase=function(props){var tasks=props;var response=fetch('/updatetask',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({tasks:tasks,user:cookies.get('user')})});};_this.taskDone=function(){var tasks=cookies.get('tasks');tasks.map(function(task){if(task.title===_this.state.task){if(task.done===true)task.done=false;else task.done=true;cookies.set('tasks',tasks);_this.updateDatabase(tasks);}});window.location.reload();};_this.taskDelete=function(){var tasks=cookies.get('tasks');tasks=tasks.filter(function(task){return task.title!==_this.state.task;});cookies.set('tasks',tasks);_this.updateDatabase(tasks);window.location.reload();};_this.choosePrior=function(task){if(task.priority===1&&task.done===true)return'priorityCircleGreyDone';else if(task.priority===1&&task.done===false)return'priorityCircleGrey';else if(task.priority===2&&task.done===true)return'priorityCircleBlueDone';else if(task.priority===2&&task.done===false)return'priorityCircleBlue';else if(task.priority===3&&task.done===true)return'priorityCircleRedDone';else return'priorityCircleRed';};_this.createDate=function(date){var day=new Date(date).getDate();var month=new Date(date).getMonth();switch(month){case 0:month='Jan';break;case 1:month='Feb';break;case 2:month='Mar';break;case 3:month='Apr';break;case 4:month='May';break;case 5:month='Jun';break;case 6:month='Jul';break;case 7:month='Aug';break;case 8:month='Sep';break;case 9:month='Oct';break;case 10:month='Nov';break;case 11:month='Dec';break;}return day+' '+month;};_this.handleTask=function(props){document.querySelector('.taskMenu').style.display='block';_this.setState({task:props});};_this.taskClose=function(){document.querySelector('.taskMenu').style.display='none';};_this.createTaskList=function(){var tasks=cookies.get('tasks')||[];if(tasks.length===0){var pic=/*#__PURE__*/React.createElement(\"svg\",{className:\"noTasks\",height:\"512pt\",viewBox:\"-53 0 512 512.00002\",width:\"512pt\",xmlns:\"http://www.w3.org/2000/svg\"},/*#__PURE__*/React.createElement(\"g\",{fill:\"#ffae8b\"},/*#__PURE__*/React.createElement(\"path\",{d:\"m313.074219 149.273438c-.710938-4.167969-4.664063-6.960938-8.824219-6.257813l-18.949219 3.234375c-4.164062.710938-6.964843 4.660156-6.253906 8.824219.632813 3.730469 3.871094 6.363281 7.527344 6.363281.429687 0 .859375-.035156 1.296875-.109375l18.949218-3.230469c4.164063-.710937 6.964844-4.660156 6.253907-8.824218zm0 0\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m304.128906 185.011719-18.242187-9.910157c-3.714844-2.015624-8.359375-.640624-10.375 3.070313s-.640625 8.355469 3.070312 10.375l18.246094 9.90625c1.160156.632813 2.410156.929687 3.644531.929687 2.714844 0 5.339844-1.445312 6.726563-4 2.019531-3.710937.644531-8.355468-3.070313-10.371093zm0 0\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m25.3125 161.328125c.433594.074219.867188.109375 1.292969.109375 3.660156 0 6.898437-2.632812 7.53125-6.363281.710937-4.164063-2.089844-8.113281-6.253907-8.824219l-18.945312-3.234375c-4.164062-.707031-8.117188 2.089844-8.828125 6.257813-.710937 4.164062 2.089844 8.113281 6.253906 8.824218zm0 0\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m27.296875 175.101562-18.242187 9.910157c-3.714844 2.015625-5.085938 6.660156-3.070313 10.375 1.382813 2.550781 4.011719 3.996093 6.726563 3.996093 1.234374 0 2.484374-.296874 3.644531-.925781l18.246093-9.910156c3.710938-2.019531 5.085938-6.660156 3.070313-10.375-2.019531-3.710937-6.660156-5.085937-10.375-3.070313zm0 0\"})),/*#__PURE__*/React.createElement(\"path\",{id:\"tail\",d:\"m328.554688 165.308594c1.335937 26.425781 35.226562 67.464844 31.285156 119.820312-3.523438 46.839844-25.601563 103.726563-70.796875 132.503906.179687 2.585938.277343 4.984376.277343 7.160157 0 28.503906-14.984374 45.230469-45.421874 54.1875.027343-.007813 161.660156-35.203125 161.699218-207.730469.039063-175.988281-78.804687-140.671875-77.042968-105.941406zm0 0\",fill:\"#ffdca7\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m314.003906 396.679688c-7.371094 7.949218-15.683594 15.039062-24.964844 20.949218.183594 2.585938.28125 4.984375.28125 7.160156 0 28.507813-14.984374 45.234376-45.421874 54.191407 0 0 32.53125-7.085938 68.40625-30.46875 3.039062-6.804688 4.550781-14.667969 4.550781-23.722657 0-7.246093-1.058594-16.917968-2.851563-28.109374zm0 0\",fill:\"#ffcf86\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m194.800781 51.21875s21.394531-54.824219 39.726563-51.03125c18.589844 3.84375 14.980468 65.691406 14.980468 65.691406s38.398438 58.9375 37.15625 92.839844c-1.242187 33.898438-23.035156 56.511719-44.601562 60.636719 0 0 47.257812 156.882812 47.257812 205.4375 0 48.550781-43.453124 62.941406-132.726562 62.941406-89.277344 0-132.730469-14.390625-132.730469-62.941406 0-48.554688 47.257813-205.4375 47.257813-205.4375-21.5625-4.125-43.359375-26.738281-44.601563-60.636719-1.242187-33.902344 37.15625-92.839844 37.15625-92.839844s-3.609375-61.847656 14.980469-65.691406c18.328125-3.792969 39.726562 51.03125 39.726562 51.03125zm0 0\",fill:\"#ffe9c8\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m156.59375 460.199219c-81.277344 0-124.566406-11.933594-131.675781-50.703125-.675781 5.820312-1.054688 10.992187-1.054688 15.296875 0 48.550781 43.449219 62.941406 132.726563 62.941406s132.730468-14.394531 132.730468-62.941406c0-4.304688-.378906-9.476563-1.054687-15.296875-7.109375 38.769531-50.398437 50.703125-131.671875 50.703125zm0 0\",fill:\"#ffdca7\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m78.65625.1875c-18.589844 3.84375-14.980469 65.691406-14.980469 65.691406s-38.398437 58.9375-37.15625 92.839844c.65625 17.925781 7.0625 32.691406 16.140625 43.242188 107.960938-24.144532 98.457032-150.742188 98.457032-150.742188h-22.734376s-21.398437-54.824219-39.726562-51.03125zm0 0\",fill:\"#ffae8b\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m234.527344.1875c18.585937 3.84375 14.980468 65.691406 14.980468 65.691406s38.398438 58.9375 37.15625 92.839844c-.65625 17.925781-7.0625 32.691406-16.140624 43.242188-107.960938-24.144532-98.460938-150.742188-98.460938-150.742188h22.738281s21.394531-54.824219 39.726563-51.03125zm0 0\",fill:\"#ffae8b\"}),/*#__PURE__*/React.createElement(\"path\",{id:\"lefteye\",d:\"m92.410156 111.300781c-8.707031 0-15.527344 8.46875-15.527344 19.28125s6.820313 19.28125 15.527344 19.28125c8.703125 0 15.523438-8.46875 15.523438-19.28125s-6.820313-19.28125-15.523438-19.28125zm0 0\",fill:\"#433f43\"}),/*#__PURE__*/React.createElement(\"path\",{id:\"righteye\",d:\"m220.773438 111.300781c-8.703126 0-15.523438 8.46875-15.523438 19.28125s6.820312 19.28125 15.523438 19.28125c8.707031 0 15.527343-8.46875 15.527343-19.28125s-6.820312-19.28125-15.527343-19.28125zm0 0\",fill:\"#433f43\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m180.089844 148.078125c0-2.664063-1.027344-9.105469-10.527344-11.355469-3.121094-.738281-7-1.054687-12.96875-1.054687-5.976562 0-9.851562.316406-12.96875 1.054687-9.503906 2.25-10.53125 8.691406-10.53125 11.355469 0 7.273437 6.917969 14.035156 15.851562 16.597656v17.148438c0 4.222656 3.421876 7.648437 7.648438 7.648437 4.222656 0 7.648438-3.425781 7.648438-7.648437v-17.148438c8.929687-2.5625 15.847656-9.324219 15.847656-16.597656zm0 0\",fill:\"#dd8858\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m76.039062 306.507812s7.457032 197.84375 35.929688 197.84375 29.148438-178.359374 29.148438-178.359374\",fill:\"#ffe9c8\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m237.144531 306.507812s-7.457031 197.84375-35.929687 197.84375-29.152344-178.359374-29.152344-178.359374\",fill:\"#ffe9c8\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m111.96875 512c-13.949219 0-20.710938-19.605469-25.039062-36.683594-4.25-16.75-8.019532-39.984375-11.207032-69.054687-5.390625-49.164063-7.308594-98.96875-7.328125-99.46875-.160156-4.21875 3.132813-7.769531 7.355469-7.929688 4.21875-.183593 7.773438 3.132813 7.933594 7.355469.015625.460938 1.792968 46.570312 6.726562 93.53125 2.878906 27.410156 6.25 49.707031 10.019532 66.269531 5.445312 23.933594 10.253906 29.382813 11.632812 30.5 2.074219-1.539062 12.097656-12.695312 17.882812-86.273437 3.328126-42.328125 3.523438-83.867188 3.523438-84.285156.015625-4.214844 3.4375-7.617188 7.648438-7.617188h.03125c4.222656.015625 7.632812 3.453125 7.617187 7.675781 0 .449219-.210937 45.410157-3.921875 89.789063-2.199219 26.28125-5.1875 47.304687-8.878906 62.480468-3.519532 14.472657-9.835938 33.710938-23.996094 33.710938zm0 0\",fill:\"#ffdca7\"}),/*#__PURE__*/React.createElement(\"path\",{d:\"m201.214844 512c-14.160156 0-20.476563-19.238281-24-33.707031-3.691406-15.179688-6.675782-36.199219-8.875-62.484375-3.710938-44.378906-3.921875-89.339844-3.925782-89.789063-.015624-4.222656 3.394532-7.660156 7.621094-7.675781h.027344c4.210938 0 7.632812 3.402344 7.648438 7.621094.003906.414062.199218 42.027344 3.53125 84.355468 5.785156 73.511719 15.804687 84.660157 17.878906 86.203126 1.378906-1.121094 6.1875-6.566407 11.632812-30.503907 3.769532-16.558593 7.140625-38.855469 10.019532-66.269531 4.933593-46.960938 6.710937-93.070312 6.726562-93.53125.160156-4.222656 3.742188-7.53125 7.933594-7.355469 4.21875.160157 7.511718 3.710938 7.355468 7.933594-.019531.496094-1.9375 50.300781-7.328124 99.46875-3.1875 29.066406-6.957032 52.300781-11.207032 69.054687-4.328125 17.074219-11.089844 36.679688-25.039062 36.679688zm0 0\",fill:\"#ffdca7\"}));return/*#__PURE__*/React.createElement(Fragment,null,pic,/*#__PURE__*/React.createElement(\"span\",{className:\"noTasks__txt\"},\"No tasks added yet\"));}else{var tasksToDo=tasks.filter(function(task){return!task.done;});tasksToDo=tasksToDo.sort(function(a,b){var t1=new Date(a.date).getTime();var t2=new Date(b.date).getTime();return t1-t2;});var tasksDone=tasks.filter(function(task){return task.done;});tasksDone=tasksDone.sort(function(a,b){var t1=new Date(a.date).getTime();var t2=new Date(b.date).getTime();return t1-t2;});tasksToDo=tasksToDo.map(function(task){return/*#__PURE__*/React.createElement(Fragment,{key:task.title},/*#__PURE__*/React.createElement(\"div\",{className:\"taskListToDo\"},/*#__PURE__*/React.createElement(\"span\",{className:_this.choosePrior(task)}),/*#__PURE__*/React.createElement(\"span\",{onClick:_this.handleTask.bind(_assertThisInitialized(_this),task.title),className:\"taskName\"},task.title,\" \"),/*#__PURE__*/React.createElement(\"span\",{className:\"taskDate\"},_this.createDate(task.date))));});tasksDone=tasksDone.map(function(task){return/*#__PURE__*/React.createElement(Fragment,{key:task.title},/*#__PURE__*/React.createElement(\"div\",{className:\"taskListDone\"},/*#__PURE__*/React.createElement(\"span\",{className:_this.choosePrior(task)}),/*#__PURE__*/React.createElement(\"span\",{onClick:_this.handleTask.bind(_assertThisInitialized(_this),task.title),className:\"taskName\"},task.title,\" \"),/*#__PURE__*/React.createElement(\"span\",{className:\"taskDate\"},_this.createDate(task.date))));});tasks=[tasksToDo,tasksDone];return tasks;}};return _this;}_createClass(TaskList,[{key:\"componentDidMount\",value:function componentDidMount(){animation();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"taskListPanel\"},/*#__PURE__*/React.createElement(\"img\",{src:logo,alt:\"logo-img\",className:\"logoImg\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"taskListHeader\"},\"Here are your current tasks: \"),/*#__PURE__*/React.createElement(\"div\",{className:\"tasksListMobile\"},this.createTaskList())),/*#__PURE__*/React.createElement(\"div\",{className:\"taskMenu\"},/*#__PURE__*/React.createElement(\"div\",{className:\"taskMenu__option\",onClick:this.taskDone},\"Done\"),/*#__PURE__*/React.createElement(\"div\",{className:\"taskMenu__option\",onClick:this.taskDelete},\"Delete\"),/*#__PURE__*/React.createElement(\"div\",{className:\"taskMenu__option\",onClick:this.taskClose},\"Cancel \")));}}]);return TaskList;}(Component);export default TaskList;","map":{"version":3,"sources":["/Users/wojtek/Downloads/todo/client/src/components/TaskList.jsx"],"names":["React","Component","Fragment","TimelineMax","Cookies","logo","cookies","animation","tasks","get","length","lefteye","document","querySelector","righteye","tail","t1","repeat","repeatDelay","add","to","opacity","set","transformOrigin","rotation","TaskList","state","task","updateDatabase","props","response","fetch","method","headers","body","JSON","stringify","user","taskDone","map","title","done","window","location","reload","taskDelete","filter","choosePrior","priority","createDate","date","day","Date","getDate","month","getMonth","handleTask","style","display","setState","taskClose","createTaskList","pic","tasksToDo","sort","a","b","getTime","t2","tasksDone","bind"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react'\nimport {TimelineMax} from 'gsap'\nimport Cookies from 'universal-cookie'\nimport './TaskList.sass'\nimport logo from './img/logo.png'\n\nconst cookies = new Cookies()\n\nconst animation = () => {\n    let tasks = cookies.get('tasks') || []\n    if (tasks.length === 0) {\n        const lefteye = document.querySelector('#lefteye')\n        const righteye = document.querySelector('#righteye')\n        const tail = document.querySelector('#tail')\n\n        let t1 = new TimelineMax({\n            repeat: -1,\n            repeatDelay: 3,\n        })\n\n        t1\n            .add('start')\n            .to(lefteye, .1, {opacity: 0})\n            .to(righteye, .1, {opacity: 0}, 'start')\n            .add('blink')\n            .to(lefteye, .1, {opacity: 1})\n            .to(righteye, .1, {opacity: 1}, 'blink')\n            .set(tail, {transformOrigin: '50% 100%'})\n            .to(tail, .5, {rotation: -7})\n            .to(tail, .5, {rotation: 14})\n            .to(tail, .5, {rotation: 0})\n\n        return null\n    }\n}\n\nclass TaskList extends Component {\n    state = {\n        task: ''\n    }\n\n    updateDatabase = props => {\n        const tasks = props\n        const response = fetch('/updatetask', {\n          method: 'POST',\n          headers: {\n          'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({tasks: tasks, user: cookies.get('user')}),\n        })\n      }\n\n    taskDone = () => {\n        let tasks = cookies.get('tasks')\n        tasks.map(task => {\n            if (task.title === this.state.task) {\n                if (task.done === true) task.done = false\n                else task.done = true\n                cookies.set('tasks', tasks)\n                this.updateDatabase(tasks)\n            }\n        })\n        window.location.reload()\n    }\n    \n    taskDelete = () => {\n        let tasks = cookies.get('tasks')\n        tasks = tasks.filter(task => \n          task.title !== this.state.task\n        )\n        cookies.set('tasks', tasks)\n        this.updateDatabase(tasks)\n        window.location.reload()\n    }\n    \n    choosePrior = task => {\n        if ((task.priority === 1) && (task.done === true)) return 'priorityCircleGreyDone'\n        else if ((task.priority === 1) && (task.done === false)) return 'priorityCircleGrey'\n        else if ((task.priority === 2) && (task.done === true)) return 'priorityCircleBlueDone'\n        else if ((task.priority === 2) && (task.done === false)) return 'priorityCircleBlue'\n        else if ((task.priority === 3) && (task.done === true)) return 'priorityCircleRedDone'\n        else return 'priorityCircleRed'\n    }\n    \n    createDate = date => {\n        const day = new Date(date).getDate()\n        let month = new Date(date).getMonth()\n\n        switch (month) {\n            case 0:\n                month = 'Jan'\n                break;\n            case 1:\n                month = 'Feb'\n                break;\n            case 2:\n                month = 'Mar'\n                break;\n            case 3:\n                month = 'Apr'\n                break;\n            case 4:\n                month = 'May'\n                break;\n            case 5:\n                month = 'Jun'\n                break;\n            case 6:\n                month = 'Jul'\n                break;\n            case 7:\n                month = 'Aug'\n                break;\n            case 8:\n                month = 'Sep'\n                break;\n            case 9:\n                month = 'Oct'\n                break;\n            case 10:\n                month = 'Nov'\n                break;\n            case 11:\n                month = 'Dec'\n                break;\n        }\n\n        return day + ' ' + month\n    }\n    \n    handleTask = props => {\n        document.querySelector('.taskMenu').style.display = 'block'\n        this.setState({\n            task: props\n        })\n    }\n    \n    taskClose = () => {\n        document.querySelector('.taskMenu').style.display = 'none'\n    }\n\n    createTaskList = () => {\n        let tasks = cookies.get('tasks') || []\n        if (tasks.length === 0) {\n\n            const pic = <svg className='noTasks' height=\"512pt\" viewBox=\"-53 0 512 512.00002\" width=\"512pt\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g fill=\"#ffae8b\">\n                <path d=\"m313.074219 149.273438c-.710938-4.167969-4.664063-6.960938-8.824219-6.257813l-18.949219 3.234375c-4.164062.710938-6.964843 4.660156-6.253906 8.824219.632813 3.730469 3.871094 6.363281 7.527344 6.363281.429687 0 .859375-.035156 1.296875-.109375l18.949218-3.230469c4.164063-.710937 6.964844-4.660156 6.253907-8.824218zm0 0\"/>\n                <path d=\"m304.128906 185.011719-18.242187-9.910157c-3.714844-2.015624-8.359375-.640624-10.375 3.070313s-.640625 8.355469 3.070312 10.375l18.246094 9.90625c1.160156.632813 2.410156.929687 3.644531.929687 2.714844 0 5.339844-1.445312 6.726563-4 2.019531-3.710937.644531-8.355468-3.070313-10.371093zm0 0\"/>\n                <path d=\"m25.3125 161.328125c.433594.074219.867188.109375 1.292969.109375 3.660156 0 6.898437-2.632812 7.53125-6.363281.710937-4.164063-2.089844-8.113281-6.253907-8.824219l-18.945312-3.234375c-4.164062-.707031-8.117188 2.089844-8.828125 6.257813-.710937 4.164062 2.089844 8.113281 6.253906 8.824218zm0 0\"/>\n                <path d=\"m27.296875 175.101562-18.242187 9.910157c-3.714844 2.015625-5.085938 6.660156-3.070313 10.375 1.382813 2.550781 4.011719 3.996093 6.726563 3.996093 1.234374 0 2.484374-.296874 3.644531-.925781l18.246093-9.910156c3.710938-2.019531 5.085938-6.660156 3.070313-10.375-2.019531-3.710937-6.660156-5.085937-10.375-3.070313zm0 0\"/>\n            </g>\n            <path id=\"tail\" d=\"m328.554688 165.308594c1.335937 26.425781 35.226562 67.464844 31.285156 119.820312-3.523438 46.839844-25.601563 103.726563-70.796875 132.503906.179687 2.585938.277343 4.984376.277343 7.160157 0 28.503906-14.984374 45.230469-45.421874 54.1875.027343-.007813 161.660156-35.203125 161.699218-207.730469.039063-175.988281-78.804687-140.671875-77.042968-105.941406zm0 0\" fill=\"#ffdca7\"/>\n            <path d=\"m314.003906 396.679688c-7.371094 7.949218-15.683594 15.039062-24.964844 20.949218.183594 2.585938.28125 4.984375.28125 7.160156 0 28.507813-14.984374 45.234376-45.421874 54.191407 0 0 32.53125-7.085938 68.40625-30.46875 3.039062-6.804688 4.550781-14.667969 4.550781-23.722657 0-7.246093-1.058594-16.917968-2.851563-28.109374zm0 0\" fill=\"#ffcf86\"/>\n            <path d=\"m194.800781 51.21875s21.394531-54.824219 39.726563-51.03125c18.589844 3.84375 14.980468 65.691406 14.980468 65.691406s38.398438 58.9375 37.15625 92.839844c-1.242187 33.898438-23.035156 56.511719-44.601562 60.636719 0 0 47.257812 156.882812 47.257812 205.4375 0 48.550781-43.453124 62.941406-132.726562 62.941406-89.277344 0-132.730469-14.390625-132.730469-62.941406 0-48.554688 47.257813-205.4375 47.257813-205.4375-21.5625-4.125-43.359375-26.738281-44.601563-60.636719-1.242187-33.902344 37.15625-92.839844 37.15625-92.839844s-3.609375-61.847656 14.980469-65.691406c18.328125-3.792969 39.726562 51.03125 39.726562 51.03125zm0 0\" fill=\"#ffe9c8\"/>\n            <path d=\"m156.59375 460.199219c-81.277344 0-124.566406-11.933594-131.675781-50.703125-.675781 5.820312-1.054688 10.992187-1.054688 15.296875 0 48.550781 43.449219 62.941406 132.726563 62.941406s132.730468-14.394531 132.730468-62.941406c0-4.304688-.378906-9.476563-1.054687-15.296875-7.109375 38.769531-50.398437 50.703125-131.671875 50.703125zm0 0\" fill=\"#ffdca7\"/>\n            <path d=\"m78.65625.1875c-18.589844 3.84375-14.980469 65.691406-14.980469 65.691406s-38.398437 58.9375-37.15625 92.839844c.65625 17.925781 7.0625 32.691406 16.140625 43.242188 107.960938-24.144532 98.457032-150.742188 98.457032-150.742188h-22.734376s-21.398437-54.824219-39.726562-51.03125zm0 0\" fill=\"#ffae8b\"/>\n            <path d=\"m234.527344.1875c18.585937 3.84375 14.980468 65.691406 14.980468 65.691406s38.398438 58.9375 37.15625 92.839844c-.65625 17.925781-7.0625 32.691406-16.140624 43.242188-107.960938-24.144532-98.460938-150.742188-98.460938-150.742188h22.738281s21.394531-54.824219 39.726563-51.03125zm0 0\" fill=\"#ffae8b\"/>\n            <path id=\"lefteye\" d=\"m92.410156 111.300781c-8.707031 0-15.527344 8.46875-15.527344 19.28125s6.820313 19.28125 15.527344 19.28125c8.703125 0 15.523438-8.46875 15.523438-19.28125s-6.820313-19.28125-15.523438-19.28125zm0 0\" fill=\"#433f43\"/>\n            <path id=\"righteye\" d=\"m220.773438 111.300781c-8.703126 0-15.523438 8.46875-15.523438 19.28125s6.820312 19.28125 15.523438 19.28125c8.707031 0 15.527343-8.46875 15.527343-19.28125s-6.820312-19.28125-15.527343-19.28125zm0 0\" fill=\"#433f43\"/>\n            <path d=\"m180.089844 148.078125c0-2.664063-1.027344-9.105469-10.527344-11.355469-3.121094-.738281-7-1.054687-12.96875-1.054687-5.976562 0-9.851562.316406-12.96875 1.054687-9.503906 2.25-10.53125 8.691406-10.53125 11.355469 0 7.273437 6.917969 14.035156 15.851562 16.597656v17.148438c0 4.222656 3.421876 7.648437 7.648438 7.648437 4.222656 0 7.648438-3.425781 7.648438-7.648437v-17.148438c8.929687-2.5625 15.847656-9.324219 15.847656-16.597656zm0 0\" fill=\"#dd8858\"/>\n            <path d=\"m76.039062 306.507812s7.457032 197.84375 35.929688 197.84375 29.148438-178.359374 29.148438-178.359374\" fill=\"#ffe9c8\"/>\n            <path d=\"m237.144531 306.507812s-7.457031 197.84375-35.929687 197.84375-29.152344-178.359374-29.152344-178.359374\" fill=\"#ffe9c8\"/>\n            <path d=\"m111.96875 512c-13.949219 0-20.710938-19.605469-25.039062-36.683594-4.25-16.75-8.019532-39.984375-11.207032-69.054687-5.390625-49.164063-7.308594-98.96875-7.328125-99.46875-.160156-4.21875 3.132813-7.769531 7.355469-7.929688 4.21875-.183593 7.773438 3.132813 7.933594 7.355469.015625.460938 1.792968 46.570312 6.726562 93.53125 2.878906 27.410156 6.25 49.707031 10.019532 66.269531 5.445312 23.933594 10.253906 29.382813 11.632812 30.5 2.074219-1.539062 12.097656-12.695312 17.882812-86.273437 3.328126-42.328125 3.523438-83.867188 3.523438-84.285156.015625-4.214844 3.4375-7.617188 7.648438-7.617188h.03125c4.222656.015625 7.632812 3.453125 7.617187 7.675781 0 .449219-.210937 45.410157-3.921875 89.789063-2.199219 26.28125-5.1875 47.304687-8.878906 62.480468-3.519532 14.472657-9.835938 33.710938-23.996094 33.710938zm0 0\" fill=\"#ffdca7\"/>\n            <path d=\"m201.214844 512c-14.160156 0-20.476563-19.238281-24-33.707031-3.691406-15.179688-6.675782-36.199219-8.875-62.484375-3.710938-44.378906-3.921875-89.339844-3.925782-89.789063-.015624-4.222656 3.394532-7.660156 7.621094-7.675781h.027344c4.210938 0 7.632812 3.402344 7.648438 7.621094.003906.414062.199218 42.027344 3.53125 84.355468 5.785156 73.511719 15.804687 84.660157 17.878906 86.203126 1.378906-1.121094 6.1875-6.566407 11.632812-30.503907 3.769532-16.558593 7.140625-38.855469 10.019532-66.269531 4.933593-46.960938 6.710937-93.070312 6.726562-93.53125.160156-4.222656 3.742188-7.53125 7.933594-7.355469 4.21875.160157 7.511718 3.710938 7.355468 7.933594-.019531.496094-1.9375 50.300781-7.328124 99.46875-3.1875 29.066406-6.957032 52.300781-11.207032 69.054687-4.328125 17.074219-11.089844 36.679688-25.039062 36.679688zm0 0\" fill=\"#ffdca7\"/>\n        </svg>\n\n            return (\n                <Fragment>\n                    {pic}\n                    <span className='noTasks__txt'>No tasks added yet</span>\n                </Fragment>\n            )\n        }\n    \n        else\n        {\n            let tasksToDo = tasks.filter(task => !task.done)\n            tasksToDo = tasksToDo.sort(function(a,b) {\n                const t1 = new Date(a.date).getTime()\n                const t2 = new Date(b.date).getTime()\n                return t1-t2\n            })\n\n            let tasksDone = tasks.filter(task => task.done)\n            tasksDone = tasksDone.sort(function(a,b) {\n                const t1 = new Date(a.date).getTime()\n                const t2 = new Date(b.date).getTime()\n                return t1-t2\n            })\n    \n            tasksToDo = tasksToDo.map(task => \n                <Fragment key={task.title}>\n                    <div className='taskListToDo'>\n                        <span className={this.choosePrior(task)}></span>\n                        <span onClick={this.handleTask.bind(this, task.title)} className='taskName'>{task.title} </span><span className='taskDate'>{this.createDate(task.date)}</span>\n                    </div>\n                </Fragment>\n            )\n\n            tasksDone = tasksDone.map(task => \n                <Fragment key={task.title}>\n                    <div className='taskListDone'>\n                        <span className={this.choosePrior(task)}></span>\n                        <span onClick={this.handleTask.bind(this, task.title)} className='taskName'>{task.title} </span><span className='taskDate'>{this.createDate(task.date)}</span>\n                    </div>\n                </Fragment>\n            )\n\n            tasks = [tasksToDo, tasksDone]\n\n            return tasks\n        }\n    }\n\n    componentDidMount() {\n        animation()\n    }\n\n    render() {\n        return (\n            <>\n                <div className='taskListPanel'>\n                    <img src={logo} alt='logo-img' className='logoImg' />\n                    <span className='taskListHeader'>Here are your current tasks: </span>\n                    <div className='tasksListMobile'>{this.createTaskList()}</div>\n                </div>\n                <div className='taskMenu'>\n                    <div className='taskMenu__option' onClick={this.taskDone}>Done</div>\n                    <div className='taskMenu__option' onClick={this.taskDelete}>Delete</div>\n                    <div className='taskMenu__option' onClick={this.taskClose}>Cancel </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default TaskList"]},"metadata":{},"sourceType":"module"}