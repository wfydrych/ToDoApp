{"ast":null,"code":"var _jsxFileName = \"/Users/wojtek/Downloads/todo/client/src/components/LoginBar.jsx\";\nimport React from 'react';\nimport Cookies from 'universal-cookie';\nimport login from './img/log.png';\nimport './TaskAdd.sass';\nconst cookies = new Cookies();\n\nconst signBtn = () => {\n  const x = window.matchMedia('(max-width: 1023px)');\n  if (x.matches) return '';else if (cookies.get('login')) return '';else return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"log\",\n    onClick: this.handleRegisterBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 15\n    }\n  }, \"Sign up\");\n};\n\nconst txt = () => {\n  if (cookies.get('login')) return 'Log out';else return 'Log in';\n};\n\nconst handleLoginBtn = props => {\n  if (cookies.get('login')) {\n    cookies.remove('login');\n    cookies.remove('tasks');\n    cookies.remove('user');\n    cookies.remove('start');\n    window.location.reload();\n  } else if (props.screen === 2) props.setTaskScreen();else props.setLoginScreen();\n};\n\nconst LoginBar = (screen, setTaskScreen, setLoginScreen) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"login-img\",\n    src: login,\n    alt: \"login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), signBtn(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"log\",\n    onClick: () => handleLoginBtn(screen, setTaskScreen, setLoginScreen),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, txt()));\n};\n\nexport default LoginBar;","map":{"version":3,"sources":["/Users/wojtek/Downloads/todo/client/src/components/LoginBar.jsx"],"names":["React","Cookies","login","cookies","signBtn","x","window","matchMedia","matches","get","handleRegisterBtn","txt","handleLoginBtn","props","remove","location","reload","screen","setTaskScreen","setLoginScreen","LoginBar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAO,gBAAP;AAEA,MAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;;AAEA,MAAMG,OAAO,GAAG,MAAM;AACpB,QAAMC,CAAC,GAAGC,MAAM,CAACC,UAAP,CAAkB,qBAAlB,CAAV;AACA,MAAIF,CAAC,CAACG,OAAN,EAAe,OAAO,EAAP,CAAf,KACK,IAAIL,OAAO,CAACM,GAAR,CAAY,OAAZ,CAAJ,EAA0B,OAAO,EAAP,CAA1B,KACA,oBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,OAAO,EAAE,KAAKC,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACN,CALD;;AAOA,MAAMC,GAAG,GAAG,MAAM;AAChB,MAAIR,OAAO,CAACM,GAAR,CAAY,OAAZ,CAAJ,EAA0B,OAAO,SAAP,CAA1B,KACK,OAAO,QAAP;AACN,CAHD;;AAKA,MAAMG,cAAc,GAAGC,KAAK,IAAI;AAC9B,MAAIV,OAAO,CAACM,GAAR,CAAY,OAAZ,CAAJ,EAA0B;AACtBN,IAAAA,OAAO,CAACW,MAAR,CAAe,OAAf;AACAX,IAAAA,OAAO,CAACW,MAAR,CAAe,OAAf;AACAX,IAAAA,OAAO,CAACW,MAAR,CAAe,MAAf;AACAX,IAAAA,OAAO,CAACW,MAAR,CAAe,OAAf;AACAR,IAAAA,MAAM,CAACS,QAAP,CAAgBC,MAAhB;AACH,GAND,MAQK,IAAIH,KAAK,CAACI,MAAN,KAAiB,CAArB,EAAwBJ,KAAK,CAACK,aAAN,GAAxB,KACAL,KAAK,CAACM,cAAN;AAEN,CAZD;;AAcA,MAAMC,QAAQ,GAAG,CAACH,MAAD,EAASC,aAAT,EAAwBC,cAAxB,KAA2C;AACxD,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEjB,KAAhC;AAAuC,IAAA,GAAG,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKE,OAAO,EAFZ,eAGI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,OAAO,EAAG,MAAMQ,cAAc,CAACK,MAAD,EAASC,aAAT,EAAwBC,cAAxB,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6FR,GAAG,EAAhG,CAHJ,CADF;AAOD,CARH;;AAUE,eAAeS,QAAf","sourcesContent":["import React from 'react'\nimport Cookies from 'universal-cookie'\nimport login from './img/log.png'\nimport './TaskAdd.sass'\n\nconst cookies = new Cookies()\n\nconst signBtn = () => {\n  const x = window.matchMedia('(max-width: 1023px)')\n  if (x.matches) return ''\n  else if (cookies.get('login')) return ''\n  else return <div className=\"log\" onClick={this.handleRegisterBtn}>Sign up</div>\n}\n\nconst txt = () => {\n  if (cookies.get('login')) return 'Log out'\n  else return 'Log in'\n}\n\nconst handleLoginBtn = props => {\n  if (cookies.get('login')) {\n      cookies.remove('login')\n      cookies.remove('tasks')\n      cookies.remove('user')\n      cookies.remove('start')\n      window.location.reload()\n  }\n\n  else if (props.screen === 2) props.setTaskScreen()\n  else props.setLoginScreen()\n  \n}\n\nconst LoginBar = (screen, setTaskScreen, setLoginScreen) => {\n    return (\n      <div className='login-bar'>\n          <img className='login-img' src={login} alt='login' />\n          {signBtn()}\n          <div className='log' onClick={ () => handleLoginBtn(screen, setTaskScreen, setLoginScreen)}>{txt()}</div>\n      </div>\n    )\n  }\n\n  export default LoginBar"]},"metadata":{},"sourceType":"module"}