{"ast":null,"code":"var _jsxFileName = \"/Users/wojtek/Downloads/todo/client/src/components/Register.jsx\";\nimport React, { useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport './TaskAdd.sass';\nconst cookies = new Cookies();\n\nconst handleRegister = async (email, login, pass, confPass) => {\n  const errField = document.querySelector('.regErr');\n  if (email.length < 6) errField.innerText = 'Too short email!';else if (login.length < 3) errField.innerText = 'Too short login!';else if (pass !== confPass) errField.innerText = 'Passwords are not the same!';else if (!email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) errField.innerText = 'Incorrect email!';else if (!pass.match(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/)) errField.innerText = 'Incorrect password!';else {\n    errField.innetText = '';\n    const response = await fetch('/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        login,\n        pass\n      })\n    });\n    const answer = await response.text();\n    errField.innerText = answer;\n  }\n};\n\nconst Register = props => {\n  const [email, setEmail] = useState('');\n  const [login, setLogin] = useState('');\n  const [pass, setPass] = useState('');\n  const [confPass, setConfPass] = useState('');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"login-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Join us!\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"login-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Take control over your tasks.\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"login-input\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"email\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"login-input\",\n    value: login,\n    onChange: e => setLogin(e.target.value),\n    placeholder: \"login\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"login-input\",\n    value: pass,\n    onChange: e => setPass(e.target.value),\n    placeholder: \"password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"login-input\",\n    value: confPass,\n    onChange: e => setConfPass(e.target.value),\n    placeholder: \"confirm password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"login-button\",\n    onClick: () => handleRegister(email, login, pass, confPass),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"login-create\",\n    onClick: () => props.setTaskScreen(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Back to ToDo\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"regErr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"login-dot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"register-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Password must have at least:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 39\n    }\n  }), \"- 1 letter\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), \"- 1 number\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), \"- 6 signs\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 20\n    }\n  })));\n};\n\nexport default Register;","map":{"version":3,"sources":["/Users/wojtek/Downloads/todo/client/src/components/Register.jsx"],"names":["React","useState","Cookies","cookies","handleRegister","email","login","pass","confPass","errField","document","querySelector","length","innerText","match","innetText","response","fetch","method","headers","body","JSON","stringify","answer","text","Register","props","setEmail","setLogin","setPass","setConfPass","e","target","value","setTaskScreen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Cookies from 'universal-cookie'\nimport './TaskAdd.sass'\n\nconst cookies = new Cookies()\n\nconst handleRegister = async (email, login, pass, confPass) => {\n  const errField = document.querySelector('.regErr')\n\n  if (email.length < 6) errField.innerText = 'Too short email!'\n\n  else if (login.length < 3) errField.innerText = 'Too short login!'\n\n  else if (pass !== confPass) errField.innerText = 'Passwords are not the same!'\n\n  else if (!email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) errField.innerText = 'Incorrect email!'\n\n  else if (!pass.match(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/)) errField.innerText = 'Incorrect password!'\n\n  else {\n      errField.innetText = ''\n      const response = await fetch('/register', {\n          method: 'POST',\n          headers: {\n          'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ email, login, pass }),\n      })\n      const answer = await response.text();\n      errField.innerText = answer\n  }\n}   \n\nconst Register = props => {\n  const [email, setEmail] = useState('')\n  const [login, setLogin] = useState('')\n  const [pass, setPass] = useState('')\n  const [confPass, setConfPass] = useState('')\n\n  return (\n    <div className='register'>\n      <span className='login-title'>Join us!</span>\n      <span className='login-subtitle'>Take control over your tasks.</span>\n      <input className='login-input' value={email} onChange={e => setEmail(e.target.value)} placeholder='email' type='text' />\n      <input className='login-input' value={login} onChange={e => setLogin(e.target.value)} placeholder='login' type='text' />\n      <input className='login-input' value={pass} onChange={e => setPass(e.target.value)} placeholder='password' type='password' />\n      <input className='login-input' value={confPass} onChange={e => setConfPass(e.target.value)} placeholder='confirm password' type='password' />\n      <button className='login-button' onClick={ () => handleRegister(email, login, pass, confPass)}>Register</button>\n      <span className='login-create' onClick={ () => props.setTaskScreen()}>Back to ToDo</span>\n      <span className='regErr'></span>\n      <span className='login-dot'></span>\n      <span className='register-hint'>\n          Password must have at least:<br/>\n          - 1 letter<br/>\n          - 1 number<br/>\n          - 6 signs<br/>\n      </span>\n    </div>\n  )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}